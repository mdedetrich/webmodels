package org.mdedetrich.webmodels

import io.circe.JsonObject

import java.net.URI

/** Problem Details for HTTP APIs
  *
  * @see https://tools.ietf.org/html/rfc7807
  * @param `type` A URI reference [RFC3986] that identifies the
  * problem type.  This specification encourages that, when
  * dereferenced, it provide human-readable documentation for the
  * problem type (e.g., using HTML [W3C.REC-html5-20141028]).  When
  * this member is not present, its value is assumed to be
  * "about:blank".
  * @param title  A short, human-readable summary of the problem
  * type.  It SHOULD NOT change from occurrence to occurrence of the
  * problem, except for purposes of localization (e.g., using
  * proactive content negotiation; se
  * @param status The HTTP status code ([RFC7231], Section 6)
  * generated by the origin server for this occurrence of the problem.
  * @param detail A human-readable explanation specific to this
  * occurrence of the problem.
  * @param instance A URI reference that identifies the specific
  * occurrence of the problem.  It may or may not yield further
  * information if dereferenced.
  * @param extraFields Any extra fields placed into the problem object that
  *   aren't part of the standard
  */
final case class Problem(`type`: URI,
                         title: Option[String] = None,
                         status: Option[Int] = None,
                         detail: Option[String] = None,
                         instance: Option[String] = None,
                         extraFields: JsonObject = JsonObject.empty
)

object Problem {
  final val DefaultType: URI = new URI("about:blank")

  /** Problem Details for HTTP APIs. Constructs a problem with the default `type`
    * value of about:blank
    *
    * @see https://tools.ietf.org/html/rfc7807
    * @param title  A short, human-readable summary of the problem
    * type.  It SHOULD NOT change from occurrence to occurrence of the
    * problem, except for purposes of localization (e.g., using
    * proactive content negotiation; se
    * @param status The HTTP status code ([RFC7231], Section 6)
    * generated by the origin server for this occurrence of the problem.
    * @param detail A human-readable explanation specific to this
    * occurrence of the problem.
    * @param instance A URI reference that identifies the specific
    * occurrence of the problem.  It may or may not yield further
    * information if dereferenced.
    * @param extraFields Any extra fields placed into the problem object that
    *   aren't part of the standard
    */
  final def withDefault(title: Option[String] = None,
                        status: Option[Int] = None,
                        detail: Option[String] = None,
                        instance: Option[String] = None,
                        extraFields: JsonObject = JsonObject.empty
  ): Problem = Problem(DefaultType, title, status, detail, instance, extraFields)
}
